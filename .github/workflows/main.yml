name: CI/CD
on:
  push:
    branches: [main]

jobs:
  test-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies & Testing Client
        run: |
          cd client/
          npm ci
          npm run test

      - name: Install dependencies & Testing Server
        run: |
          cd server/
          npm ci
          npm run test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push Docker Image of Server
        run: |
          TAG="mikailis/cavalry-guilds:server"
          docker build --target production -t $TAG ./server
          docker push $TAG

      - name: Build and Push Docker Image of Client
        run: |
          TAG="mikailis/cavalry-guilds:client"
          docker build --build-arg REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }} --target production -t $TAG ./client
          docker push $TAG

  deployment:
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: SSH into Droplet, pull image, and run container
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DROPLET_SSH_HOST}}
          username: ${{secrets.DROPLET_SSH_USERNAME}}
          key: ${{secrets.DROPLET_SSH_PRIVATE_KEY}}
          script: |
            cd /app/
            docker compose -f /app/production-compose.yaml pull
            docker compose -f /app/production-compose.yaml up -d --build
